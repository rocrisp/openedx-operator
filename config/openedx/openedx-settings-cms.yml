apiVersion: v1
data:
  __init__.py: ""
  development.py: "# -*- coding: utf-8 -*-\nimport os\nfrom cms.envs.devstack import *\n\nLMS_BASE = \"www.lms-openedx.apps.demo.coreostrain.me:8000\"\nLMS_ROOT_URL = \"http://\" + LMS_BASE\nFEATURES[\"PREVIEW_LMS_BASE\"] = \"preview.\" + LMS_BASE\n\n####### Settings common to LMS and CMS\nimport json\nimport os\n\n# Mongodb connection parameters: simply modify `mongodb_parameters` to affect all connections to MongoDb.\nmongodb_parameters = {\n    \"host\": \"mongodb\",\n    \"port\": 27017,\n    \n    \"user\": None,\n    \"password\": None,\n    \n    \"db\": \"openedx\",\n}\nDOC_STORE_CONFIG = mongodb_parameters\nCONTENTSTORE = {\n    \"ENGINE\": \"xmodule.contentstore.mongo.MongoContentStore\",\n    \"ADDITIONAL_OPTIONS\": {},\n    \"DOC_STORE_CONFIG\": DOC_STORE_CONFIG\n}\n# Load module store settings from config files\nupdate_module_store_settings(MODULESTORE, doc_store_settings=DOC_STORE_CONFIG)\nDATA_DIR = \"/openedx/data/\"\nfor store in MODULESTORE[\"default\"][\"OPTIONS\"][\"stores\"]:\n   store[\"OPTIONS\"][\"fs_root\"] = DATA_DIR\n\n\nDEFAULT_FROM_EMAIL = ENV_TOKENS.get(\"DEFAULT_FROM_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nDEFAULT_FEEDBACK_EMAIL = ENV_TOKENS.get(\"DEFAULT_FEEDBACK_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nSERVER_EMAIL = ENV_TOKENS.get(\"SERVER_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nTECH_SUPPORT_EMAIL = ENV_TOKENS.get(\"TECH_SUPPORT_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nCONTACT_EMAIL = ENV_TOKENS.get(\"CONTACT_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nBUGS_EMAIL = ENV_TOKENS.get(\"BUGS_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nUNIVERSITY_EMAIL = ENV_TOKENS.get(\"UNIVERSITY_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nPRESS_EMAIL = ENV_TOKENS.get(\"PRESS_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nPAYMENT_SUPPORT_EMAIL = ENV_TOKENS.get(\"PAYMENT_SUPPORT_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nBULK_EMAIL_DEFAULT_FROM_EMAIL = ENV_TOKENS.get(\"BULK_EMAIL_DEFAULT_FROM_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nAPI_ACCESS_MANAGER_EMAIL = ENV_TOKENS.get(\"API_ACCESS_MANAGER_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nAPI_ACCESS_FROM_EMAIL = ENV_TOKENS.get(\"API_ACCESS_FROM_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\n\n# Get rid completely of coursewarehistoryextended, as we do not use the CSMH database\nINSTALLED_APPS.remove(\"coursewarehistoryextended\")\nDATABASE_ROUTERS.remove(\n    \"openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter\"\n)\n\n# Set uploaded media file path\nMEDIA_ROOT = \"/openedx/media/\"\n\n# Add your MFE and third-party app domains here\nCORS_ORIGIN_WHITELIST = []\n\n# Video settings\nVIDEO_IMAGE_SETTINGS[\"STORAGE_KWARGS\"][\"location\"] = MEDIA_ROOT\nVIDEO_TRANSCRIPTS_SETTINGS[\"STORAGE_KWARGS\"][\"location\"] = MEDIA_ROOT\n\nGRADES_DOWNLOAD = {\n    \"STORAGE_TYPE\": \"\",\n    \"STORAGE_KWARGS\": {\n        \"base_url\": \"/media/grades/\",\n        \"location\": \"/openedx/media/grades\",\n    },\n}\n\nORA2_FILEUPLOAD_BACKEND = \"filesystem\"\nORA2_FILEUPLOAD_ROOT = \"/openedx/data/ora2\"\nORA2_FILEUPLOAD_CACHE_NAME = \"ora2-storage\"\n\n# Change syslog-based loggers which don't work inside docker containers\nLOGGING[\"handlers\"][\"local\"] = {\n    \"class\": \"logging.handlers.WatchedFileHandler\",\n    \"filename\": os.path.join(LOG_DIR, \"all.log\"),\n    \"formatter\": \"standard\",\n}\nLOGGING[\"handlers\"][\"tracking\"] = {\n    \"level\": \"DEBUG\",\n    \"class\": \"logging.handlers.WatchedFileHandler\",\n    \"filename\": os.path.join(LOG_DIR, \"tracking.log\"),\n    \"formatter\": \"standard\",\n}\nLOGGING[\"loggers\"][\"tracking\"][\"handlers\"] = [\"console\", \"local\", \"tracking\"]\n# Disable django/drf deprecation warnings\nimport logging\nimport warnings\nfrom django.utils.deprecation import RemovedInDjango30Warning, RemovedInDjango31Warning\nfrom rest_framework import RemovedInDRF310Warning, RemovedInDRF311Warning\nwarnings.simplefilter('ignore', RemovedInDjango30Warning)\nwarnings.simplefilter('ignore', RemovedInDjango31Warning)\nwarnings.simplefilter('ignore', RemovedInDRF310Warning)\nwarnings.simplefilter('ignore', RemovedInDRF311Warning)\n\n# Email\nEMAIL_USE_SSL = False\n# Forward all emails from edX's Automated Communication Engine (ACE) to django.\nACE_ENABLED_CHANNELS = [\"django_email\"]\nACE_CHANNEL_DEFAULT_EMAIL = \"django_email\"\nACE_CHANNEL_TRANSACTIONAL_EMAIL = \"django_email\"\nEMAIL_FILE_PATH = \"/tmp/openedx/emails\"\n\nLOCALE_PATHS.append(\"/openedx/locale/contrib/locale\")\nLOCALE_PATHS.append(\"/openedx/locale/user/locale\")\n\n# Allow the platform to include itself in an iframe\nX_FRAME_OPTIONS = \"SAMEORIGIN\"\n\n\nJWT_AUTH[\"JWT_ISSUER\"] = \"http://www.lms-openedx.apps.demo.coreostrain.me/oauth2\"\nJWT_AUTH[\"JWT_AUDIENCE\"] = \"openedx\"\nJWT_AUTH[\"JWT_SECRET_KEY\"] = \"8c3CgWnCEWRX4ypD78iyX7Yg\"\nJWT_AUTH[\"JWT_PRIVATE_SIGNING_JWK\"] = json.dumps(\n    {\n        \"kid\": \"openedx\",\n        \"kty\": \"RSA\",\n        \"e\": \"AQAB\",\n        \"d\": \"FCOb0LAOMVlSJvN091_VsRHiK0j_IZUDRq82uLN0fJCKpWN02gyDF73XYjmFuc8NdYiRJqyD8WqyMg21fvNzgS-DlIzv4Q9eCf8Xly_jWVYltFNOAcYp7oPvZG2XqbgIkSj-ooOiBAtvm2wX8mCmBGAW657HgHOokDobRA-bxOZt2bCfscFPjkOfYTTPf4V8m9_lXGJawiRN0saQFq5_cjslLGB9X96hE-yxZbFA7mtMr9Il4wcpgG5s5oig2p5dE0wd-IzlckAOoLd016-67dNTNrNmVN4ITHffY-M8KYMklgzmZE8hvdlt_pt6W5kIyamTcSA1_1RN8gHJHBtayQ\",\n        \"n\": \"tflKzViWjPQ6mbwEegKmRl1dnDmL99EEMIN9r2QI5S0dikHMu64neDcHzX0NEjRscv6TuJ7IMe5Ekh75SCSDCk6YaMao2s6W5vHU8vUczysP72BDYeGQj13ZHe4kwPyEDFaJtOZt5kkMxaVEhpGAwnu41WMvchTcPcqLWn5sYDrU83azFsyw33yUG3h7nwymCEqblK93EO5oEcb7KUiQflusGWnV9Yhte1Jel7-hmU4FACt9yOnvQnUCJBXjRDpZAgpkzaf3ZAa1vFKxHdhmDhiLCCTqwwTviq4lS6bEN6jAG5HB7ewHHRiCIXjxAwstGIs6XaX7xPTtGUykxadb8w\",\n        \"p\": \"wO3tECV18PQcLiLMvfjXYhLz6yxP7tLTezO14RCIclUo2kGJxmknSVg1_wGgJPeIhE1p2mZoKMcjdW8PkjC9Pj2jHesi5hrLxkEjvH_y_NwLysDfXE6_H7GLczK6PziBP6XR5qfQlY67uYglvXE4JQUCJ4eBl7qiFKpYoTRvAN8\",\n        \"q\": \"8XaAqGZzL-R80u9zs50RJ0AKuW77yAou1VKHdA6QiN6ZBZqLCsVPtPiofHHZ7qYRxeixseKX7B8O3UDiDeZNbkn0qYNL7ICyhZEQVZq8DtGc5cL2LNoflKzDQtF_oWIl6Pa8-2K2rCXPdwd3YXyZBuwY5mjg-LjivIntuifqo20\",\n    }\n)\nJWT_AUTH[\"JWT_PUBLIC_SIGNING_JWK_SET\"] = json.dumps(\n    {\n        \"keys\": [\n            {\n                \"kid\": \"openedx\",\n                \"kty\": \"RSA\",\n                \"e\": \"AQAB\",\n                \"n\": \"tflKzViWjPQ6mbwEegKmRl1dnDmL99EEMIN9r2QI5S0dikHMu64neDcHzX0NEjRscv6TuJ7IMe5Ekh75SCSDCk6YaMao2s6W5vHU8vUczysP72BDYeGQj13ZHe4kwPyEDFaJtOZt5kkMxaVEhpGAwnu41WMvchTcPcqLWn5sYDrU83azFsyw33yUG3h7nwymCEqblK93EO5oEcb7KUiQflusGWnV9Yhte1Jel7-hmU4FACt9yOnvQnUCJBXjRDpZAgpkzaf3ZAa1vFKxHdhmDhiLCCTqwwTviq4lS6bEN6jAG5HB7ewHHRiCIXjxAwstGIs6XaX7xPTtGUykxadb8w\",\n            }\n        ]\n    }\n)\nJWT_AUTH[\"JWT_ISSUERS\"] = [\n    {\n        \"ISSUER\": \"http://www.lms-openedx.apps.demo.coreostrain.me/oauth2\",\n        \"AUDIENCE\": \"openedx\",\n        \"SECRET_KEY\": \"8c3CgWnCEWRX4ypD78iyX7Yg\"\n    }\n]\n\n\n######## End of settings common to LMS and CMS\n\n######## Common CMS settings\n\nSTUDIO_NAME = u\"Operator Enablement Team at RedHat - Studio\"\nMAX_ASSET_UPLOAD_FILE_SIZE_IN_MB = 100\n\nFRONTEND_LOGIN_URL = LMS_ROOT_URL + '/login'\nFRONTEND_LOGOUT_URL = LMS_ROOT_URL + '/logout'\nFRONTEND_REGISTER_URL = LMS_ROOT_URL + '/register'\n\n# Create folders if necessary\nfor folder in [LOG_DIR, MEDIA_ROOT, STATIC_ROOT_BASE]:\n    if not os.path.exists(folder):\n        os.makedirs(folder)\n\n\n\n######## End of common CMS settings\n\n# Setup correct webpack configuration file for development\nWEBPACK_CONFIG_PATH = \"webpack.dev.config.js\"\n\n\n"
  production.py: "# -*- coding: utf-8 -*-\nimport os\nfrom cms.envs.production import *\n\n####### Settings common to LMS and CMS\nimport json\nimport os\n\n# Mongodb connection parameters: simply modify `mongodb_parameters` to affect all connections to MongoDb.\nmongodb_parameters = {\n    \"host\": \"mongodb\",\n    \"port\": 27017,\n    \n    \"user\": None,\n    \"password\": None,\n    \n    \"db\": \"openedx\",\n}\nDOC_STORE_CONFIG = mongodb_parameters\nCONTENTSTORE = {\n    \"ENGINE\": \"xmodule.contentstore.mongo.MongoContentStore\",\n    \"ADDITIONAL_OPTIONS\": {},\n    \"DOC_STORE_CONFIG\": DOC_STORE_CONFIG\n}\n# Load module store settings from config files\nupdate_module_store_settings(MODULESTORE, doc_store_settings=DOC_STORE_CONFIG)\nDATA_DIR = \"/openedx/data/\"\nfor store in MODULESTORE[\"default\"][\"OPTIONS\"][\"stores\"]:\n   store[\"OPTIONS\"][\"fs_root\"] = DATA_DIR\n\n\nDEFAULT_FROM_EMAIL = ENV_TOKENS.get(\"DEFAULT_FROM_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nDEFAULT_FEEDBACK_EMAIL = ENV_TOKENS.get(\"DEFAULT_FEEDBACK_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nSERVER_EMAIL = ENV_TOKENS.get(\"SERVER_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nTECH_SUPPORT_EMAIL = ENV_TOKENS.get(\"TECH_SUPPORT_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nCONTACT_EMAIL = ENV_TOKENS.get(\"CONTACT_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nBUGS_EMAIL = ENV_TOKENS.get(\"BUGS_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nUNIVERSITY_EMAIL = ENV_TOKENS.get(\"UNIVERSITY_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nPRESS_EMAIL = ENV_TOKENS.get(\"PRESS_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nPAYMENT_SUPPORT_EMAIL = ENV_TOKENS.get(\"PAYMENT_SUPPORT_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nBULK_EMAIL_DEFAULT_FROM_EMAIL = ENV_TOKENS.get(\"BULK_EMAIL_DEFAULT_FROM_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nAPI_ACCESS_MANAGER_EMAIL = ENV_TOKENS.get(\"API_ACCESS_MANAGER_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nAPI_ACCESS_FROM_EMAIL = ENV_TOKENS.get(\"API_ACCESS_FROM_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\n\n# Get rid completely of coursewarehistoryextended, as we do not use the CSMH database\nINSTALLED_APPS.remove(\"coursewarehistoryextended\")\nDATABASE_ROUTERS.remove(\n    \"openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter\"\n)\n\n# Set uploaded media file path\nMEDIA_ROOT = \"/openedx/media/\"\n\n# Add your MFE and third-party app domains here\nCORS_ORIGIN_WHITELIST = []\n\n# Video settings\nVIDEO_IMAGE_SETTINGS[\"STORAGE_KWARGS\"][\"location\"] = MEDIA_ROOT\nVIDEO_TRANSCRIPTS_SETTINGS[\"STORAGE_KWARGS\"][\"location\"] = MEDIA_ROOT\n\nGRADES_DOWNLOAD = {\n    \"STORAGE_TYPE\": \"\",\n    \"STORAGE_KWARGS\": {\n        \"base_url\": \"/media/grades/\",\n        \"location\": \"/openedx/media/grades\",\n    },\n}\n\nORA2_FILEUPLOAD_BACKEND = \"filesystem\"\nORA2_FILEUPLOAD_ROOT = \"/openedx/data/ora2\"\nORA2_FILEUPLOAD_CACHE_NAME = \"ora2-storage\"\n\n# Change syslog-based loggers which don't work inside docker containers\nLOGGING[\"handlers\"][\"local\"] = {\n    \"class\": \"logging.handlers.WatchedFileHandler\",\n    \"filename\": os.path.join(LOG_DIR, \"all.log\"),\n    \"formatter\": \"standard\",\n}\nLOGGING[\"handlers\"][\"tracking\"] = {\n    \"level\": \"DEBUG\",\n    \"class\": \"logging.handlers.WatchedFileHandler\",\n    \"filename\": os.path.join(LOG_DIR, \"tracking.log\"),\n    \"formatter\": \"standard\",\n}\nLOGGING[\"loggers\"][\"tracking\"][\"handlers\"] = [\"console\", \"local\", \"tracking\"]\n# Disable django/drf deprecation warnings\nimport logging\nimport warnings\nfrom django.utils.deprecation import RemovedInDjango30Warning, RemovedInDjango31Warning\nfrom rest_framework import RemovedInDRF310Warning, RemovedInDRF311Warning\nwarnings.simplefilter('ignore', RemovedInDjango30Warning)\nwarnings.simplefilter('ignore', RemovedInDjango31Warning)\nwarnings.simplefilter('ignore', RemovedInDRF310Warning)\nwarnings.simplefilter('ignore', RemovedInDRF311Warning)\n\n# Email\nEMAIL_USE_SSL = False\n# Forward all emails from edX's Automated Communication Engine (ACE) to django.\nACE_ENABLED_CHANNELS = [\"django_email\"]\nACE_CHANNEL_DEFAULT_EMAIL = \"django_email\"\nACE_CHANNEL_TRANSACTIONAL_EMAIL = \"django_email\"\nEMAIL_FILE_PATH = \"/tmp/openedx/emails\"\n\nLOCALE_PATHS.append(\"/openedx/locale/contrib/locale\")\nLOCALE_PATHS.append(\"/openedx/locale/user/locale\")\n\n# Allow the platform to include itself in an iframe\nX_FRAME_OPTIONS = \"SAMEORIGIN\"\n\n\nJWT_AUTH[\"JWT_ISSUER\"] = \"http://www.lms-openedx.apps.demo.coreostrain.me/oauth2\"\nJWT_AUTH[\"JWT_AUDIENCE\"] = \"openedx\"\nJWT_AUTH[\"JWT_SECRET_KEY\"] = \"8c3CgWnCEWRX4ypD78iyX7Yg\"\nJWT_AUTH[\"JWT_PRIVATE_SIGNING_JWK\"] = json.dumps(\n    {\n        \"kid\": \"openedx\",\n        \"kty\": \"RSA\",\n        \"e\": \"AQAB\",\n        \"d\": \"FCOb0LAOMVlSJvN091_VsRHiK0j_IZUDRq82uLN0fJCKpWN02gyDF73XYjmFuc8NdYiRJqyD8WqyMg21fvNzgS-DlIzv4Q9eCf8Xly_jWVYltFNOAcYp7oPvZG2XqbgIkSj-ooOiBAtvm2wX8mCmBGAW657HgHOokDobRA-bxOZt2bCfscFPjkOfYTTPf4V8m9_lXGJawiRN0saQFq5_cjslLGB9X96hE-yxZbFA7mtMr9Il4wcpgG5s5oig2p5dE0wd-IzlckAOoLd016-67dNTNrNmVN4ITHffY-M8KYMklgzmZE8hvdlt_pt6W5kIyamTcSA1_1RN8gHJHBtayQ\",\n        \"n\": \"tflKzViWjPQ6mbwEegKmRl1dnDmL99EEMIN9r2QI5S0dikHMu64neDcHzX0NEjRscv6TuJ7IMe5Ekh75SCSDCk6YaMao2s6W5vHU8vUczysP72BDYeGQj13ZHe4kwPyEDFaJtOZt5kkMxaVEhpGAwnu41WMvchTcPcqLWn5sYDrU83azFsyw33yUG3h7nwymCEqblK93EO5oEcb7KUiQflusGWnV9Yhte1Jel7-hmU4FACt9yOnvQnUCJBXjRDpZAgpkzaf3ZAa1vFKxHdhmDhiLCCTqwwTviq4lS6bEN6jAG5HB7ewHHRiCIXjxAwstGIs6XaX7xPTtGUykxadb8w\",\n        \"p\": \"wO3tECV18PQcLiLMvfjXYhLz6yxP7tLTezO14RCIclUo2kGJxmknSVg1_wGgJPeIhE1p2mZoKMcjdW8PkjC9Pj2jHesi5hrLxkEjvH_y_NwLysDfXE6_H7GLczK6PziBP6XR5qfQlY67uYglvXE4JQUCJ4eBl7qiFKpYoTRvAN8\",\n        \"q\": \"8XaAqGZzL-R80u9zs50RJ0AKuW77yAou1VKHdA6QiN6ZBZqLCsVPtPiofHHZ7qYRxeixseKX7B8O3UDiDeZNbkn0qYNL7ICyhZEQVZq8DtGc5cL2LNoflKzDQtF_oWIl6Pa8-2K2rCXPdwd3YXyZBuwY5mjg-LjivIntuifqo20\",\n    }\n)\nJWT_AUTH[\"JWT_PUBLIC_SIGNING_JWK_SET\"] = json.dumps(\n    {\n        \"keys\": [\n            {\n                \"kid\": \"openedx\",\n                \"kty\": \"RSA\",\n                \"e\": \"AQAB\",\n                \"n\": \"tflKzViWjPQ6mbwEegKmRl1dnDmL99EEMIN9r2QI5S0dikHMu64neDcHzX0NEjRscv6TuJ7IMe5Ekh75SCSDCk6YaMao2s6W5vHU8vUczysP72BDYeGQj13ZHe4kwPyEDFaJtOZt5kkMxaVEhpGAwnu41WMvchTcPcqLWn5sYDrU83azFsyw33yUG3h7nwymCEqblK93EO5oEcb7KUiQflusGWnV9Yhte1Jel7-hmU4FACt9yOnvQnUCJBXjRDpZAgpkzaf3ZAa1vFKxHdhmDhiLCCTqwwTviq4lS6bEN6jAG5HB7ewHHRiCIXjxAwstGIs6XaX7xPTtGUykxadb8w\",\n            }\n        ]\n    }\n)\nJWT_AUTH[\"JWT_ISSUERS\"] = [\n    {\n        \"ISSUER\": \"http://www.lms-openedx.apps.demo.coreostrain.me/oauth2\",\n        \"AUDIENCE\": \"openedx\",\n        \"SECRET_KEY\": \"8c3CgWnCEWRX4ypD78iyX7Yg\"\n    }\n]\n\n\n######## End of settings common to LMS and CMS\n\n######## Common CMS settings\n\nSTUDIO_NAME = u\"Operator Enablement Team at RedHat - Studio\"\nMAX_ASSET_UPLOAD_FILE_SIZE_IN_MB = 100\n\nFRONTEND_LOGIN_URL = LMS_ROOT_URL + '/login'\nFRONTEND_LOGOUT_URL = LMS_ROOT_URL + '/logout'\nFRONTEND_REGISTER_URL = LMS_ROOT_URL + '/register'\n\n# Create folders if necessary\nfor folder in [LOG_DIR, MEDIA_ROOT, STATIC_ROOT_BASE]:\n    if not os.path.exists(folder):\n        os.makedirs(folder)\n\n\n\n######## End of common CMS settings\n\nALLOWED_HOSTS = [\n    ENV_TOKENS.get(\"CMS_BASE\"),\n    \"cms\",\n]\n\nMIDDLEWARE.insert(0, \"whitenoise.middleware.WhiteNoiseMiddleware\")\n\n"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: openedx-xmWN7pgOQHszibWniaFBoui7
    app.kubernetes.io/managed-by: tutor
    app.kubernetes.io/part-of: openedx
    app.kubernetes.io/version: 10.4.0
  name: openedx-settings-cms
  namespace: openedx