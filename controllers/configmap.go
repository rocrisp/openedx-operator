package controllers

import (
	cachev1 "github.com/rocrisp/openedx-operator/api/v1"
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

//newConfigMap returns a new ConfigMap instance for the given OpenedX.
func newConfigMap(instance *cachev1.Openedx) *corev1.ConfigMap {
	labels := labels(instance, "configmap")

	return &corev1.ConfigMap{
		ObjectMeta: metav1.ObjectMeta{
			Name:      "placeholder",
			Namespace: instance.Namespace,
			Labels:    labels,
		},
	}
}

func (r *OpenedxReconciler) openedxConfig(instance *cachev1.Openedx) *corev1.ConfigMap {
	cm := newConfigMap(instance)
	cm.ObjectMeta.Name = "openedx-config" //Name the ConfigMap
	lmsName := getOpenedxLmsUrlName(instance)
	cmsName := getOpenedxCmsUrlName(instance)
	title := getOpenedxTitle(instance)

	if cm.Data == nil {
		cm.Data = make(map[string]string)
	}

	cm.Data["cms.env.json"] = "{\n  \"SITE_NAME\": \"" + cmsName + ".www." + lmsName + "-openedx.apps.demo.coreostrain.me\",\n  \"BOOK_URL\": \"\",\n  \"LOG_DIR\": \"/openedx/data/logs\",\n  \"LOGGING_ENV\": \"sandbox\",\n  \"OAUTH_OIDC_ISSUER\": \"http://www." + lmsName + "-openedx.apps.demo.coreostrain.me/oauth2\",\n  \"PLATFORM_NAME\": \"" + title + "\",\n  \"FEATURES\": {\n    \n    \n    \"CERTIFICATES_HTML_VIEW\": true,\n    \"PREVIEW_LMS_BASE\": \"preview.www." + lmsName + "-openedx.apps.demo.coreostrain.me\",\n    \"ENABLE_COURSEWARE_INDEX\": true,\n    \"ENABLE_CSMH_EXTENDED\": false,\n    \"ENABLE_LEARNER_RECORDS\": false,\n    \"ENABLE_LIBRARY_INDEX\": true\n  },\n  \"LMS_ROOT_URL\": \"http://www." + lmsName + "-openedx.apps.demo.coreostrain.me\",\n  \"CMS_ROOT_URL\": \"http://" + cmsName + ".www." + lmsName + "-openedx.apps.demo.coreostrain.me\",\n  \"CMS_BASE\": \"" + cmsName + ".www." + lmsName + "-openedx.apps.demo.coreostrain.me\",\n  \"LMS_BASE\": \"www." + lmsName + "-openedx.apps.demo.coreostrain.me\",\n  \"CONTACT_EMAIL\": \"contact@www." + lmsName + "-openedx.apps.demo.coreostrain.me\",\n  \"CELERY_BROKER_TRANSPORT\": \"redis\",\n  \"CELERY_BROKER_HOSTNAME\": \"redis:6379\",\n  \"CELERY_BROKER_USER\": \"\",\n  \"CELERY_BROKER_PASSWORD\": \"\",\n  \"ALTERNATE_WORKER_QUEUES\": \"lms\",\n  \"ENABLE_COMPREHENSIVE_THEMING\": true,\n  \"COMPREHENSIVE_THEME_DIRS\": [\"/openedx/themes\"],\n  \"STATIC_ROOT_BASE\": \"/openedx/staticfiles\",\n  \"ELASTIC_SEARCH_CONFIG\": [{\n    \n    \"host\": \"elasticsearch\",\n    \"port\": 9200\n  }],\n  \"EMAIL_BACKEND\": \"django.core.mail.backends.smtp.EmailBackend\",\n  \"EMAIL_HOST\": \"smtp\",\n  \"EMAIL_PORT\": 25,\n  \"EMAIL_USE_TLS\": false,\n  \"HTTPS\": \"off\",\n  \"LANGUAGE_CODE\": \"en\",\n  \"SESSION_COOKIE_DOMAIN\": \".www." + lmsName + "-openedx.apps.demo.coreostrain.me\",\n  \n  \"CACHES\": {\n    \"default\": {\n      \"KEY_PREFIX\": \"default\",\n      \"VERSION\": \"1\",\n      \"BACKEND\": \"django_redis.cache.RedisCache\",\n \"LOCATION\": \"redis://@redis:6379/1\"\n    },\n    \"general\": {\n      \"KEY_PREFIX\":  \"general\",\n      \"BACKEND\": \"django_redis.cache.RedisCache\",\n\"LOCATION\": \"redis://@redis:6379/1\"\n    },\n    \"mongo_metadata_inheritance\": {\n      \"KEY_PREFIX\": \"mongo_metadata_inheritance\",\n      \"TIMEOUT\": 300,\n      \"BACKEND\": \"django_redis.cache.RedisCache\",\n \"LOCATION\": \"redis://@redis:6379/1\"\n    },\n    \"staticfiles\": {\n \"KEY_PREFIX\": \"staticfiles_cms\",\n\"BACKEND\": \"django.core.cache.backends.locmem.LocMemCache\",\n\"LOCATION\": \"staticfiles_cms\"},\n    \"configuration\": {\n      \"KEY_PREFIX\": \"configuration\",\n\"BACKEND\": \"django_redis.cache.RedisCache\",\n\"LOCATION\": \"redis://@redis:6379/1\"\n},\n    \"celery\": {\n      \"KEY_PREFIX\":  \"celery\",\n      \"TIMEOUT\": \"7200\",\n      \"BACKEND\": \"django_redis.cache.RedisCache\",\n           \"LOCATION\": \"redis://@redis:6379/1\"\n    },\n    \"course_structure_cache\": {\n      \"KEY_PREFIX\": \"course_structure\",\n      \"TIMEOUT\": \"7200\",\n      \"BACKEND\": \"django_redis.cache.RedisCache\",\n\"LOCATION\": \"redis://@redis:6379/1\"\n    }\n  },\n  \"SECRET_KEY\": \"8c3CgWnCEWRX4ypD78iyX7Yg\",\n  \"AWS_ACCESS_KEY_ID\": \"\",\n  \"AWS_SECRET_ACCESS_KEY\": \"\",\n  \"CONTENTSTORE\": null,\n  \"DOC_STORE_CONFIG\": null,\n  \n  \"XQUEUE_INTERFACE\": {\n    \"django_auth\": null,\n    \"url\": null\n  },\n  \"DATABASES\": {\n    \"default\": {\n      \"ENGINE\": \"django.db.backends.mysql\",\n      \"HOST\": \"mysql\",\n      \"PORT\": 3306,\n      \"NAME\": \"openedx\",\n      \"USER\": \"openedx\",\n      \"PASSWORD\": \"0yMvt69B\",\n      \"ATOMIC_REQUESTS\": true,\n      \"OPTIONS\": {\n        \"init_command\": \"SET sql_mode='STRICT_TRANS_TABLES'\"\n      }\n    }\n  },\n  \"EMAIL_HOST_USER\": \"\",\n  \"EMAIL_HOST_PASSWORD\": \"\"\n}"
	cm.Data["lms.env.json"] = "{\n  \"SITE_NAME\": \"www." + lmsName + "-openedx.apps.demo.coreostrain.me\",\n  \"BOOK_URL\": \"\",\n  \"LOG_DIR\": \"/openedx/data/logs\",\n  \"LOGGING_ENV\": \"sandbox\",\n  \"OAUTH_OIDC_ISSUER\": \"http://www." + lmsName + "-openedx.apps.demo.coreostrain.me/oauth2\",\n  \"PLATFORM_NAME\": \"" + title + "\",\n  \"FEATURES\": {\n    \n    \n    \"CERTIFICATES_HTML_VIEW\": true,\n    \"PREVIEW_LMS_BASE\": \"preview.www." + lmsName + "-openedx.apps.demo.coreostrain.me\",\n    \"ENABLE_CORS_HEADERS\": true,\n    \"ENABLE_COURSE_DISCOVERY\": true,\n    \"ENABLE_COURSEWARE_SEARCH\": true,\n    \"ENABLE_CSMH_EXTENDED\": false,\n    \"ENABLE_DASHBOARD_SEARCH\":  true,\n    \"ENABLE_COMBINED_LOGIN_REGISTRATION\": true,\n    \"ENABLE_GRADE_DOWNLOADS\": true,\n    \"ENABLE_LEARNER_RECORDS\": false,\n    \"ENABLE_MOBILE_REST_API\": true,\n    \"ENABLE_OAUTH2_PROVIDER\": true,\n    \"ENABLE_THIRD_PARTY_AUTH\": true\n  },\n  \"LMS_ROOT_URL\": \"http://www." + lmsName + "-openedx.apps.demo.coreostrain.me\",\n  \"CMS_ROOT_URL\": \"http://" + cmsName + ".www." + lmsName + "-openedx.apps.demo.coreostrain.me\",\n  \"CMS_BASE\": \"" + cmsName + ".www." + lmsName + "-openedx.apps.demo.coreostrain.me\",\n  \"LMS_BASE\": \"www." + lmsName + "-openedx.apps.demo.coreostrain.me\",\n  \"CONTACT_EMAIL\": \"contact@www." + lmsName + "-openedx.apps.demo.coreostrain.me\",\n  \"CELERY_BROKER_TRANSPORT\": \"amqp\",\n  \"CELERY_BROKER_HOSTNAME\": \"rabbitmq\",\n  \"CELERY_BROKER_USER\": \"\",\n  \"CELERY_BROKER_PASSWORD\": \"\",\n  \"ALTERNATE_WORKER_QUEUES\": \"cms\",\n  \"COMMENTS_SERVICE_URL\": \"http://forum:4567\",\n  \"COMMENTS_SERVICE_KEY\": \"forumapikey\",\n  \"ENABLE_COMPREHENSIVE_THEMING\": true,\n  \"COMPREHENSIVE_THEME_DIRS\": [\"/openedx/themes\"],\n  \"STATIC_ROOT_BASE\": \"/openedx/staticfiles\",\n  \"ELASTIC_SEARCH_CONFIG\": [{\n    \n    \"host\": \"elasticsearch\",\n    \"port\": 9200\n  }],\n  \"EMAIL_BACKEND\": \"django.core.mail.backends.smtp.EmailBackend\",\n  \"EMAIL_HOST\": \"smtp\",\n  \"EMAIL_PORT\": 25,\n  \"EMAIL_USE_TLS\": false,\n  \"HTTPS\": \"off\",\n  \"LANGUAGE_CODE\": \"en\",\n  \"SESSION_COOKIE_DOMAIN\": \".www." + lmsName + "-openedx.apps.demo.coreostrain.me\",\n  \n  \"CACHES\": {\n    \"default\": {\n      \"KEY_PREFIX\": \"default\",\n      \"VERSION\": \"1\",\n      \"BACKEND\": \"django_redis.cache.RedisCache\",\n\"LOCATION\": \"redis://@redis:6379/1\"\n    },\n    \"general\": {\n      \"KEY_PREFIX\":  \"general\",\n      \"BACKEND\": \"django_redis.cache.RedisCache\",\n \"LOCATION\": \"redis://@redis:6379/1\"\n    },\n    \"mongo_metadata_inheritance\": {\n      \"KEY_PREFIX\": \"mongo_metadata_inheritance\",\n      \"TIMEOUT\": 300,\n      \"BACKEND\": \"django_redis.cache.RedisCache\",\n\"LOCATION\": \"redis://@redis:6379/1\"\n    },\n    \"staticfiles\": {\n      \"KEY_PREFIX\": \"staticfiles_lms\",\n      \"BACKEND\": \"django_redis.cache.RedisCache\",\n\"LOCATION\": \"redis://@redis:6379/1\"\n    },\n    \"configuration\": {\n      \"KEY_PREFIX\": \"configuration\",\n      \"BACKEND\": \"django_redis.cache.RedisCache\",\n\"LOCATION\": \"redis://@redis:6379/1\"\n    },\n    \"celery\": {\n      \"KEY_PREFIX\":  \"celery\",\n      \"TIMEOUT\": \"7200\",\n      \"BACKEND\": \"django_redis.cache.RedisCache\",\n\"LOCATION\": \"redis://@redis:6379/1\"\n    },\n    \"course_structure_cache\": {\n      \"KEY_PREFIX\": \"course_structure\",\n      \"TIMEOUT\": \"7200\",\n      \"BACKEND\": \"django_redis.cache.RedisCache\",\n\"LOCATION\": \"redis://@redis:6379/1\"\n    },\n    \"ora2-storage\": {\n      \"KEY_PREFIX\":  \"ora2-storage\",\n      \"BACKEND\": \"django_redis.cache.RedisCache\",\n\"LOCATION\": \"redis://@redis:6379/1\"\n    }\n  },\n  \"SECRET_KEY\": \"8c3CgWnCEWRX4ypD78iyX7Yg\",\n  \"AWS_ACCESS_KEY_ID\": \"\",\n  \"AWS_SECRET_ACCESS_KEY\": \"\",\n  \"CONTENTSTORE\": null,\n  \"DOC_STORE_CONFIG\": null,\n  \n  \"XQUEUE_INTERFACE\": {\n    \"django_auth\": null,\n    \"url\": null\n  },\n  \"DATABASES\": {\n    \"default\": {\n      \"ENGINE\": \"django.db.backends.mysql\",\n      \"HOST\": \"mysql\",\n      \"PORT\": 3306,\n      \"NAME\": \"openedx\",\n      \"USER\": \"openedx\",\n      \"PASSWORD\": \"0yMvt69B\",\n      \"ATOMIC_REQUESTS\": true,\n      \"OPTIONS\": {\n        \"init_command\": \"SET sql_mode='STRICT_TRANS_TABLES'\"\n      }\n    }\n  },\n  \"EMAIL_HOST_USER\": \"\",\n  \"EMAIL_HOST_PASSWORD\": \"\"\n}"
	return cm
}

func (r *OpenedxReconciler) openedxSettingsCmsConfig(instance *cachev1.Openedx) *corev1.ConfigMap {
	cm := newConfigMap(instance)
	cm.ObjectMeta.Name = "openedx-settings-cms" //Name the ConfigMap
	lmsName := getOpenedxLmsUrlName(instance)
	title := getOpenedxTitle(instance)

	if cm.Data == nil {
		cm.Data = make(map[string]string)
	}
	cm.Data["__init__.py"] = "# Silence overly verbose warnings\nimport logging\nimport warnings\nfrom django.utils.deprecation import RemovedInDjango30Warning, RemovedInDjango31Warning\nfrom rest_framework import RemovedInDRF310Warning, RemovedInDRF311Warning\nwarnings.simplefilter('ignore', RemovedInDjango30Warning)\nwarnings.simplefilter('ignore', RemovedInDjango31Warning)\nwarnings.simplefilter('ignore', RemovedInDRF310Warning)\nwarnings.simplefilter('ignore', RemovedInDRF311Warning)\nwarnings.simplefilter('ignore', DeprecationWarning)"
	cm.Data["development.py"] = "# -*- coding: utf-8 -*-\nimport os\nfrom cms.envs.devstack import *\n\nLMS_BASE = \"www." + lmsName + "-openedx.apps.demo.coreostrain.me:8000\"\nLMS_ROOT_URL = \"http://\" + LMS_BASE\nFEATURES[\"PREVIEW_LMS_BASE\"] = \"preview.\" + LMS_BASE\n\n####### Settings common to LMS and CMS\nimport json\nimport os\n\n# Mongodb connection parameters: simply modify `mongodb_parameters` to affect all connections to MongoDb.\nmongodb_parameters = {\n    \"host\": \"mongodb\",\n    \"port\": 27017,\n    \n    \"user\": None,\n    \"password\": None,\n    \n    \"db\": \"openedx\",\n}\nDOC_STORE_CONFIG = mongodb_parameters\nCONTENTSTORE = {\n    \"ENGINE\": \"xmodule.contentstore.mongo.MongoContentStore\",\n    \"ADDITIONAL_OPTIONS\": {},\n    \"DOC_STORE_CONFIG\": DOC_STORE_CONFIG\n}\n# Load module store settings from config files\nupdate_module_store_settings(MODULESTORE, doc_store_settings=DOC_STORE_CONFIG)\nDATA_DIR = \"/openedx/data/\"\nfor store in MODULESTORE[\"default\"][\"OPTIONS\"][\"stores\"]:\n   store[\"OPTIONS\"][\"fs_root\"] = DATA_DIR\n\n\nDEFAULT_FROM_EMAIL = ENV_TOKENS.get(\"DEFAULT_FROM_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nDEFAULT_FEEDBACK_EMAIL = ENV_TOKENS.get(\"DEFAULT_FEEDBACK_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nSERVER_EMAIL = ENV_TOKENS.get(\"SERVER_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nTECH_SUPPORT_EMAIL = ENV_TOKENS.get(\"TECH_SUPPORT_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nCONTACT_EMAIL = ENV_TOKENS.get(\"CONTACT_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nBUGS_EMAIL = ENV_TOKENS.get(\"BUGS_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nUNIVERSITY_EMAIL = ENV_TOKENS.get(\"UNIVERSITY_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nPRESS_EMAIL = ENV_TOKENS.get(\"PRESS_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nPAYMENT_SUPPORT_EMAIL = ENV_TOKENS.get(\"PAYMENT_SUPPORT_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nBULK_EMAIL_DEFAULT_FROM_EMAIL = ENV_TOKENS.get(\"BULK_EMAIL_DEFAULT_FROM_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nAPI_ACCESS_MANAGER_EMAIL = ENV_TOKENS.get(\"API_ACCESS_MANAGER_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nAPI_ACCESS_FROM_EMAIL = ENV_TOKENS.get(\"API_ACCESS_FROM_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\n\n# Get rid completely of coursewarehistoryextended, as we do not use the CSMH database\nINSTALLED_APPS.remove(\"lms.djangoapps.coursewarehistoryextended\")\nDATABASE_ROUTERS.remove(\n    \"openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter\"\n)\n\n# Set uploaded media file path\nMEDIA_ROOT = \"/openedx/media/\"\n\n# Add your MFE and third-party app domains here\nCORS_ORIGIN_WHITELIST = []\n\n# Video settings\nVIDEO_IMAGE_SETTINGS[\"STORAGE_KWARGS\"][\"location\"] = MEDIA_ROOT\nVIDEO_TRANSCRIPTS_SETTINGS[\"STORAGE_KWARGS\"][\"location\"] = MEDIA_ROOT\n\nGRADES_DOWNLOAD = {\n    \"STORAGE_TYPE\": \"\",\n    \"STORAGE_KWARGS\": {\n        \"base_url\": \"/media/grades/\",\n        \"location\": \"/openedx/media/grades\",\n    },\n}\n\nORA2_FILEUPLOAD_BACKEND = \"filesystem\"\nORA2_FILEUPLOAD_ROOT = \"/openedx/data/ora2\"\nORA2_FILEUPLOAD_CACHE_NAME = \"ora2-storage\"\n\n# Change syslog-based loggers which don't work inside docker containers\nLOGGING[\"handlers\"][\"local\"] = {\n    \"class\": \"logging.handlers.WatchedFileHandler\",\n    \"filename\": os.path.join(LOG_DIR, \"all.log\"),\n    \"formatter\": \"standard\",\n}\nLOGGING[\"handlers\"][\"tracking\"] = {\n    \"level\": \"DEBUG\",\n    \"class\": \"logging.handlers.WatchedFileHandler\",\n    \"filename\": os.path.join(LOG_DIR, \"tracking.log\"),\n    \"formatter\": \"standard\",\n}\nLOGGING[\"loggers\"][\"tracking\"][\"handlers\"] = [\"console\", \"local\", \"tracking\"]\n# Email\nEMAIL_USE_SSL = False\n# Forward all emails from edX's Automated Communication Engine (ACE) to django.\nACE_ENABLED_CHANNELS = [\"django_email\"]\nACE_CHANNEL_DEFAULT_EMAIL = \"django_email\"\nACE_CHANNEL_TRANSACTIONAL_EMAIL = \"django_email\"\nEMAIL_FILE_PATH = \"/tmp/openedx/emails\"\n\nLOCALE_PATHS.append(\"/openedx/locale/contrib/locale\")\nLOCALE_PATHS.append(\"/openedx/locale/user/locale\")\n\n# Allow the platform to include itself in an iframe\nX_FRAME_OPTIONS = \"SAMEORIGIN\"\n\n\nJWT_AUTH[\"JWT_ISSUER\"] = \"http://www." + lmsName + "-openedx.apps.demo.coreostrain.me/oauth2\"\nJWT_AUTH[\"JWT_AUDIENCE\"] = \"openedx\"\nJWT_AUTH[\"JWT_SECRET_KEY\"] = \"8c3CgWnCEWRX4ypD78iyX7Yg\"\nJWT_AUTH[\"JWT_PRIVATE_SIGNING_JWK\"] = json.dumps(\n    {\n        \"kid\": \"openedx\",\n        \"kty\": \"RSA\",\n        \"e\": \"AQAB\",\n        \"d\": \"FCOb0LAOMVlSJvN091_VsRHiK0j_IZUDRq82uLN0fJCKpWN02gyDF73XYjmFuc8NdYiRJqyD8WqyMg21fvNzgS-DlIzv4Q9eCf8Xly_jWVYltFNOAcYp7oPvZG2XqbgIkSj-ooOiBAtvm2wX8mCmBGAW657HgHOokDobRA-bxOZt2bCfscFPjkOfYTTPf4V8m9_lXGJawiRN0saQFq5_cjslLGB9X96hE-yxZbFA7mtMr9Il4wcpgG5s5oig2p5dE0wd-IzlckAOoLd016-67dNTNrNmVN4ITHffY-M8KYMklgzmZE8hvdlt_pt6W5kIyamTcSA1_1RN8gHJHBtayQ\",\n        \"n\": \"tflKzViWjPQ6mbwEegKmRl1dnDmL99EEMIN9r2QI5S0dikHMu64neDcHzX0NEjRscv6TuJ7IMe5Ekh75SCSDCk6YaMao2s6W5vHU8vUczysP72BDYeGQj13ZHe4kwPyEDFaJtOZt5kkMxaVEhpGAwnu41WMvchTcPcqLWn5sYDrU83azFsyw33yUG3h7nwymCEqblK93EO5oEcb7KUiQflusGWnV9Yhte1Jel7-hmU4FACt9yOnvQnUCJBXjRDpZAgpkzaf3ZAa1vFKxHdhmDhiLCCTqwwTviq4lS6bEN6jAG5HB7ewHHRiCIXjxAwstGIs6XaX7xPTtGUykxadb8w\",\n        \"p\": \"wO3tECV18PQcLiLMvfjXYhLz6yxP7tLTezO14RCIclUo2kGJxmknSVg1_wGgJPeIhE1p2mZoKMcjdW8PkjC9Pj2jHesi5hrLxkEjvH_y_NwLysDfXE6_H7GLczK6PziBP6XR5qfQlY67uYglvXE4JQUCJ4eBl7qiFKpYoTRvAN8\",\n        \"q\": \"8XaAqGZzL-R80u9zs50RJ0AKuW77yAou1VKHdA6QiN6ZBZqLCsVPtPiofHHZ7qYRxeixseKX7B8O3UDiDeZNbkn0qYNL7ICyhZEQVZq8DtGc5cL2LNoflKzDQtF_oWIl6Pa8-2K2rCXPdwd3YXyZBuwY5mjg-LjivIntuifqo20\",\n    }\n)\nJWT_AUTH[\"JWT_PUBLIC_SIGNING_JWK_SET\"] = json.dumps(\n    {\n        \"keys\": [\n            {\n                \"kid\": \"openedx\",\n                \"kty\": \"RSA\",\n                \"e\": \"AQAB\",\n                \"n\": \"tflKzViWjPQ6mbwEegKmRl1dnDmL99EEMIN9r2QI5S0dikHMu64neDcHzX0NEjRscv6TuJ7IMe5Ekh75SCSDCk6YaMao2s6W5vHU8vUczysP72BDYeGQj13ZHe4kwPyEDFaJtOZt5kkMxaVEhpGAwnu41WMvchTcPcqLWn5sYDrU83azFsyw33yUG3h7nwymCEqblK93EO5oEcb7KUiQflusGWnV9Yhte1Jel7-hmU4FACt9yOnvQnUCJBXjRDpZAgpkzaf3ZAa1vFKxHdhmDhiLCCTqwwTviq4lS6bEN6jAG5HB7ewHHRiCIXjxAwstGIs6XaX7xPTtGUykxadb8w\",\n            }\n        ]\n    }\n)\nJWT_AUTH[\"JWT_ISSUERS\"] = [\n    {\n        \"ISSUER\": \"http://www." + lmsName + "-openedx.apps.demo.coreostrain.me/oauth2\",\n        \"AUDIENCE\": \"openedx\",\n        \"SECRET_KEY\": \"8c3CgWnCEWRX4ypD78iyX7Yg\"\n    }\n]\n\n\n######## End of settings common to LMS and CMS\n\n######## Common CMS settings\n\nSTUDIO_NAME = \"" + title + " - Studio\"\nMAX_ASSET_UPLOAD_FILE_SIZE_IN_MB = 100\n\nFRONTEND_LOGIN_URL = LMS_ROOT_URL + '/login'\nFRONTEND_LOGOUT_URL = LMS_ROOT_URL + '/logout'\nFRONTEND_REGISTER_URL = LMS_ROOT_URL + '/register'\n\n# Create folders if necessary\nfor folder in [LOG_DIR, MEDIA_ROOT, STATIC_ROOT_BASE]:\n    if not os.path.exists(folder):\n        os.makedirs(folder)\n\n\n\n######## End of common CMS settings\n\n# Setup correct webpack configuration file for development\nWEBPACK_CONFIG_PATH = \"webpack.dev.config.js\"\n\n\n"
	cm.Data["production.py"] = "# -*- coding: utf-8 -*-\nimport os\nfrom cms.envs.production import *\n\n####### Settings common to LMS and CMS\nimport json\nimport os\n\nfrom xmodule.modulestore.modulestore_settings import update_module_store_settings\n\n\n# Mongodb connection parameters: simply modify `mongodb_parameters` to affect all connections to MongoDb.\nmongodb_parameters = {\n    \"host\": \"mongodb\",\n    \"port\": 27017,\n    \n    \"user\": None,\n    \"password\": None,\n    \n    \"db\": \"openedx\",\n}\nDOC_STORE_CONFIG = mongodb_parameters\nCONTENTSTORE = {\n    \"ENGINE\": \"xmodule.contentstore.mongo.MongoContentStore\",\n    \"ADDITIONAL_OPTIONS\": {},\n    \"DOC_STORE_CONFIG\": DOC_STORE_CONFIG\n}\n# Load module store settings from config files\nupdate_module_store_settings(MODULESTORE, doc_store_settings=DOC_STORE_CONFIG)\nDATA_DIR = \"/openedx/data/\"\nfor store in MODULESTORE[\"default\"][\"OPTIONS\"][\"stores\"]:\n   store[\"OPTIONS\"][\"fs_root\"] = DATA_DIR\n\n# Behave like memcache when it comes to connection errors\nDJANGO_REDIS_IGNORE_EXCEPTIONS = True\nDEFAULT_FROM_EMAIL = ENV_TOKENS.get(\"DEFAULT_FROM_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nDEFAULT_FEEDBACK_EMAIL = ENV_TOKENS.get(\"DEFAULT_FEEDBACK_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nSERVER_EMAIL = ENV_TOKENS.get(\"SERVER_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nTECH_SUPPORT_EMAIL = ENV_TOKENS.get(\"TECH_SUPPORT_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nCONTACT_EMAIL = ENV_TOKENS.get(\"CONTACT_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nBUGS_EMAIL = ENV_TOKENS.get(\"BUGS_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nUNIVERSITY_EMAIL = ENV_TOKENS.get(\"UNIVERSITY_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nPRESS_EMAIL = ENV_TOKENS.get(\"PRESS_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nPAYMENT_SUPPORT_EMAIL = ENV_TOKENS.get(\"PAYMENT_SUPPORT_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nBULK_EMAIL_DEFAULT_FROM_EMAIL = ENV_TOKENS.get(\"BULK_EMAIL_DEFAULT_FROM_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nAPI_ACCESS_MANAGER_EMAIL = ENV_TOKENS.get(\"API_ACCESS_MANAGER_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nAPI_ACCESS_FROM_EMAIL = ENV_TOKENS.get(\"API_ACCESS_FROM_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\n\n# Get rid completely of lms.djangoapps.coursewarehistoryextended, as we do not use the CSMH database\nINSTALLED_APPS.remove(\"lms.djangoapps.coursewarehistoryextended\")\nDATABASE_ROUTERS.remove(\n    \"openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter\"\n)\n\n# Set uploaded media file path\nMEDIA_ROOT = \"/openedx/media/\"\n\n# Add your MFE and third-party app domains here\nCORS_ORIGIN_WHITELIST = []\n\n# Video settings\nVIDEO_IMAGE_SETTINGS[\"STORAGE_KWARGS\"][\"location\"] = MEDIA_ROOT\nVIDEO_TRANSCRIPTS_SETTINGS[\"STORAGE_KWARGS\"][\"location\"] = MEDIA_ROOT\n\nGRADES_DOWNLOAD = {\n    \"STORAGE_TYPE\": \"\",\n    \"STORAGE_KWARGS\": {\n        \"base_url\": \"/media/grades/\",\n        \"location\": \"/openedx/media/grades\",\n    },\n}\n\nORA2_FILEUPLOAD_BACKEND = \"filesystem\"\nORA2_FILEUPLOAD_ROOT = \"/openedx/data/ora2\"\nORA2_FILEUPLOAD_CACHE_NAME = \"ora2-storage\"\n\n# Change syslog-based loggers which don't work inside docker containers\nLOGGING[\"handlers\"][\"local\"] = {\n    \"class\": \"logging.handlers.WatchedFileHandler\",\n    \"filename\": os.path.join(LOG_DIR, \"all.log\"),\n    \"formatter\": \"standard\",\n}\nLOGGING[\"handlers\"][\"tracking\"] = {\n    \"level\": \"DEBUG\",\n    \"class\": \"logging.handlers.WatchedFileHandler\",\n    \"filename\": os.path.join(LOG_DIR, \"tracking.log\"),\n    \"formatter\": \"standard\",\n}\nLOGGING[\"loggers\"][\"tracking\"][\"handlers\"] = [\"console\", \"local\", \"tracking\"]\n# Email\nEMAIL_USE_SSL = False\n# Forward all emails from edX's Automated Communication Engine (ACE) to django.\nACE_ENABLED_CHANNELS = [\"django_email\"]\nACE_CHANNEL_DEFAULT_EMAIL = \"django_email\"\nACE_CHANNEL_TRANSACTIONAL_EMAIL = \"django_email\"\nEMAIL_FILE_PATH = \"/tmp/openedx/emails\"\n\nLOCALE_PATHS.append(\"/openedx/locale/contrib/locale\")\nLOCALE_PATHS.append(\"/openedx/locale/user/locale\")\n\n# Allow the platform to include itself in an iframe\nX_FRAME_OPTIONS = \"SAMEORIGIN\"\n\n\nJWT_AUTH[\"JWT_ISSUER\"] = \"http://www." + lmsName + "-openedx.apps.demo.coreostrain.me/oauth2\"\nJWT_AUTH[\"JWT_AUDIENCE\"] = \"openedx\"\nJWT_AUTH[\"JWT_SECRET_KEY\"] = \"8c3CgWnCEWRX4ypD78iyX7Yg\"\nJWT_AUTH[\"JWT_PRIVATE_SIGNING_JWK\"] = json.dumps(\n    {\n        \"kid\": \"openedx\",\n        \"kty\": \"RSA\",\n        \"e\": \"AQAB\",\n        \"d\": \"FCOb0LAOMVlSJvN091_VsRHiK0j_IZUDRq82uLN0fJCKpWN02gyDF73XYjmFuc8NdYiRJqyD8WqyMg21fvNzgS-DlIzv4Q9eCf8Xly_jWVYltFNOAcYp7oPvZG2XqbgIkSj-ooOiBAtvm2wX8mCmBGAW657HgHOokDobRA-bxOZt2bCfscFPjkOfYTTPf4V8m9_lXGJawiRN0saQFq5_cjslLGB9X96hE-yxZbFA7mtMr9Il4wcpgG5s5oig2p5dE0wd-IzlckAOoLd016-67dNTNrNmVN4ITHffY-M8KYMklgzmZE8hvdlt_pt6W5kIyamTcSA1_1RN8gHJHBtayQ\",\n        \"n\": \"tflKzViWjPQ6mbwEegKmRl1dnDmL99EEMIN9r2QI5S0dikHMu64neDcHzX0NEjRscv6TuJ7IMe5Ekh75SCSDCk6YaMao2s6W5vHU8vUczysP72BDYeGQj13ZHe4kwPyEDFaJtOZt5kkMxaVEhpGAwnu41WMvchTcPcqLWn5sYDrU83azFsyw33yUG3h7nwymCEqblK93EO5oEcb7KUiQflusGWnV9Yhte1Jel7-hmU4FACt9yOnvQnUCJBXjRDpZAgpkzaf3ZAa1vFKxHdhmDhiLCCTqwwTviq4lS6bEN6jAG5HB7ewHHRiCIXjxAwstGIs6XaX7xPTtGUykxadb8w\",\n        \"p\": \"wO3tECV18PQcLiLMvfjXYhLz6yxP7tLTezO14RCIclUo2kGJxmknSVg1_wGgJPeIhE1p2mZoKMcjdW8PkjC9Pj2jHesi5hrLxkEjvH_y_NwLysDfXE6_H7GLczK6PziBP6XR5qfQlY67uYglvXE4JQUCJ4eBl7qiFKpYoTRvAN8\",\n        \"q\": \"8XaAqGZzL-R80u9zs50RJ0AKuW77yAou1VKHdA6QiN6ZBZqLCsVPtPiofHHZ7qYRxeixseKX7B8O3UDiDeZNbkn0qYNL7ICyhZEQVZq8DtGc5cL2LNoflKzDQtF_oWIl6Pa8-2K2rCXPdwd3YXyZBuwY5mjg-LjivIntuifqo20\",\n    }\n)\nJWT_AUTH[\"JWT_PUBLIC_SIGNING_JWK_SET\"] = json.dumps(\n    {\n        \"keys\": [\n            {\n                \"kid\": \"openedx\",\n                \"kty\": \"RSA\",\n                \"e\": \"AQAB\",\n                \"n\": \"tflKzViWjPQ6mbwEegKmRl1dnDmL99EEMIN9r2QI5S0dikHMu64neDcHzX0NEjRscv6TuJ7IMe5Ekh75SCSDCk6YaMao2s6W5vHU8vUczysP72BDYeGQj13ZHe4kwPyEDFaJtOZt5kkMxaVEhpGAwnu41WMvchTcPcqLWn5sYDrU83azFsyw33yUG3h7nwymCEqblK93EO5oEcb7KUiQflusGWnV9Yhte1Jel7-hmU4FACt9yOnvQnUCJBXjRDpZAgpkzaf3ZAa1vFKxHdhmDhiLCCTqwwTviq4lS6bEN6jAG5HB7ewHHRiCIXjxAwstGIs6XaX7xPTtGUykxadb8w\",\n            }\n        ]\n    }\n)\nJWT_AUTH[\"JWT_ISSUERS\"] = [\n    {\n        \"ISSUER\": \"http://www." + lmsName + "-openedx.apps.demo.coreostrain.me/oauth2\",\n        \"AUDIENCE\": \"openedx\",\n        \"SECRET_KEY\": \"8c3CgWnCEWRX4ypD78iyX7Yg\"\n    }\n]\n\n\n######## End of settings common to LMS and CMS\n\n######## Common CMS settings\n\nSTUDIO_NAME = \"" + title + " - Studio\"\nMAX_ASSET_UPLOAD_FILE_SIZE_IN_MB = 100\n\nFRONTEND_LOGIN_URL = LMS_ROOT_URL + '/login'\nFRONTEND_LOGOUT_URL = LMS_ROOT_URL + '/logout'\nFRONTEND_REGISTER_URL = LMS_ROOT_URL + '/register'\n\n# Create folders if necessary\nfor folder in [LOG_DIR, MEDIA_ROOT, STATIC_ROOT_BASE]:\n    if not os.path.exists(folder):\n        os.makedirs(folder)\n\n\n\n######## End of common CMS settings\n\nALLOWED_HOSTS = [\n    ENV_TOKENS.get(\"CMS_BASE\"),\n    \"cms\",\n]\n"

	return cm
}

func (r *OpenedxReconciler) openedxSettingsLmsConfig(instance *cachev1.Openedx) *corev1.ConfigMap {
	cm := newConfigMap(instance)
	cm.ObjectMeta.Name = "openedx-settings-lms" //Name the ConfigMap
	lmsName := getOpenedxLmsUrlName(instance)
	cmsName := getOpenedxCmsUrlName(instance)

	if cm.Data == nil {
		cm.Data = make(map[string]string)
	}
	cm.Data["__init__.py"] = "# Silence overly verbose warnings\nimport logging\nimport warnings\nfrom django.utils.deprecation import RemovedInDjango30Warning, RemovedInDjango31Warning\nfrom rest_framework import RemovedInDRF310Warning, RemovedInDRF311Warning\nwarnings.simplefilter('ignore', RemovedInDjango30Warning)\nwarnings.simplefilter('ignore', RemovedInDjango31Warning)\nwarnings.simplefilter('ignore', RemovedInDRF310Warning)\nwarnings.simplefilter('ignore', RemovedInDRF311Warning)\nwarnings.simplefilter('ignore', DeprecationWarning)"
	cm.Data["development.py"] = "# -*- coding: utf-8 -*-\nimport os\nfrom lms.envs.devstack import *\n\n####### Settings common to LMS and CMS\nimport json\nimport os\n\n# Mongodb connection parameters: simply modify `mongodb_parameters` to affect all connections to MongoDb.\nmongodb_parameters = {\n    \"host\": \"mongodb\",\n    \"port\": 27017,\n    \n    \"user\": None,\n    \"password\": None,\n    \n    \"db\": \"openedx\",\n}\nDOC_STORE_CONFIG = mongodb_parameters\nCONTENTSTORE = {\n    \"ENGINE\": \"xmodule.contentstore.mongo.MongoContentStore\",\n    \"ADDITIONAL_OPTIONS\": {},\n    \"DOC_STORE_CONFIG\": DOC_STORE_CONFIG\n}\n# Load module store settings from config files\nupdate_module_store_settings(MODULESTORE, doc_store_settings=DOC_STORE_CONFIG)\nDATA_DIR = \"/openedx/data/\"\nfor store in MODULESTORE[\"default\"][\"OPTIONS\"][\"stores\"]:\n   store[\"OPTIONS\"][\"fs_root\"] = DATA_DIR\n DJANGO_REDIS_IGNORE_EXCEPTIONS = True  \nDEFAULT_FROM_EMAIL = ENV_TOKENS.get(\"DEFAULT_FROM_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nDEFAULT_FEEDBACK_EMAIL = ENV_TOKENS.get(\"DEFAULT_FEEDBACK_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nSERVER_EMAIL = ENV_TOKENS.get(\"SERVER_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nTECH_SUPPORT_EMAIL = ENV_TOKENS.get(\"TECH_SUPPORT_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nCONTACT_EMAIL = ENV_TOKENS.get(\"CONTACT_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nBUGS_EMAIL = ENV_TOKENS.get(\"BUGS_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nUNIVERSITY_EMAIL = ENV_TOKENS.get(\"UNIVERSITY_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nPRESS_EMAIL = ENV_TOKENS.get(\"PRESS_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nPAYMENT_SUPPORT_EMAIL = ENV_TOKENS.get(\"PAYMENT_SUPPORT_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nBULK_EMAIL_DEFAULT_FROM_EMAIL = ENV_TOKENS.get(\"BULK_EMAIL_DEFAULT_FROM_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nAPI_ACCESS_MANAGER_EMAIL = ENV_TOKENS.get(\"API_ACCESS_MANAGER_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nAPI_ACCESS_FROM_EMAIL = ENV_TOKENS.get(\"API_ACCESS_FROM_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\n\n# Get rid completely of lms.djangoapps.coursewarehistoryextended, as we do not use the CSMH database\nINSTALLED_APPS.remove(\"lms.djangoapps.coursewarehistoryextended\")\nDATABASE_ROUTERS.remove(\n    \"openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter\"\n)\n\n# Set uploaded media file path\nMEDIA_ROOT = \"/openedx/media/\"\n\n# Add your MFE and third-party app domains here\nCORS_ORIGIN_WHITELIST = []\n\n# Video settings\nVIDEO_IMAGE_SETTINGS[\"STORAGE_KWARGS\"][\"location\"] = MEDIA_ROOT\nVIDEO_TRANSCRIPTS_SETTINGS[\"STORAGE_KWARGS\"][\"location\"] = MEDIA_ROOT\n\nGRADES_DOWNLOAD = {\n    \"STORAGE_TYPE\": \"\",\n    \"STORAGE_KWARGS\": {\n        \"base_url\": \"/media/grades/\",\n        \"location\": \"/openedx/media/grades\",\n    },\n}\n\nORA2_FILEUPLOAD_BACKEND = \"filesystem\"\nORA2_FILEUPLOAD_ROOT = \"/openedx/data/ora2\"\nORA2_FILEUPLOAD_CACHE_NAME = \"ora2-storage\"\n\n# Change syslog-based loggers which don't work inside docker containers\nLOGGING[\"handlers\"][\"local\"] = {\n    \"class\": \"logging.handlers.WatchedFileHandler\",\n    \"filename\": os.path.join(LOG_DIR, \"all.log\"),\n    \"formatter\": \"standard\",\n}\nLOGGING[\"handlers\"][\"tracking\"] = {\n    \"level\": \"DEBUG\",\n    \"class\": \"logging.handlers.WatchedFileHandler\",\n    \"filename\": os.path.join(LOG_DIR, \"tracking.log\"),\n    \"formatter\": \"standard\",\n}\nLOGGING[\"loggers\"][\"tracking\"][\"handlers\"] = [\"console\", \"local\", \"tracking\"]\n# Email\nEMAIL_USE_SSL = False\n# Forward all emails from edX's Automated Communication Engine (ACE) to django.\nACE_ENABLED_CHANNELS = [\"django_email\"]\nACE_CHANNEL_DEFAULT_EMAIL = \"django_email\"\nACE_CHANNEL_TRANSACTIONAL_EMAIL = \"django_email\"\nEMAIL_FILE_PATH = \"/tmp/openedx/emails\"\n\nLOCALE_PATHS.append(\"/openedx/locale/contrib/locale\")\nLOCALE_PATHS.append(\"/openedx/locale/user/locale\")\n\n# Allow the platform to include itself in an iframe\nX_FRAME_OPTIONS = \"SAMEORIGIN\"\n\n\nJWT_AUTH[\"JWT_ISSUER\"] = \"http://www." + lmsName + "-openedx.apps.demo.coreostrain.me/oauth2\"\nJWT_AUTH[\"JWT_AUDIENCE\"] = \"openedx\"\nJWT_AUTH[\"JWT_SECRET_KEY\"] = \"8c3CgWnCEWRX4ypD78iyX7Yg\"\nJWT_AUTH[\"JWT_PRIVATE_SIGNING_JWK\"] = json.dumps(\n    {\n        \"kid\": \"openedx\",\n        \"kty\": \"RSA\",\n        \"e\": \"AQAB\",\n        \"d\": \"FCOb0LAOMVlSJvN091_VsRHiK0j_IZUDRq82uLN0fJCKpWN02gyDF73XYjmFuc8NdYiRJqyD8WqyMg21fvNzgS-DlIzv4Q9eCf8Xly_jWVYltFNOAcYp7oPvZG2XqbgIkSj-ooOiBAtvm2wX8mCmBGAW657HgHOokDobRA-bxOZt2bCfscFPjkOfYTTPf4V8m9_lXGJawiRN0saQFq5_cjslLGB9X96hE-yxZbFA7mtMr9Il4wcpgG5s5oig2p5dE0wd-IzlckAOoLd016-67dNTNrNmVN4ITHffY-M8KYMklgzmZE8hvdlt_pt6W5kIyamTcSA1_1RN8gHJHBtayQ\",\n        \"n\": \"tflKzViWjPQ6mbwEegKmRl1dnDmL99EEMIN9r2QI5S0dikHMu64neDcHzX0NEjRscv6TuJ7IMe5Ekh75SCSDCk6YaMao2s6W5vHU8vUczysP72BDYeGQj13ZHe4kwPyEDFaJtOZt5kkMxaVEhpGAwnu41WMvchTcPcqLWn5sYDrU83azFsyw33yUG3h7nwymCEqblK93EO5oEcb7KUiQflusGWnV9Yhte1Jel7-hmU4FACt9yOnvQnUCJBXjRDpZAgpkzaf3ZAa1vFKxHdhmDhiLCCTqwwTviq4lS6bEN6jAG5HB7ewHHRiCIXjxAwstGIs6XaX7xPTtGUykxadb8w\",\n        \"p\": \"wO3tECV18PQcLiLMvfjXYhLz6yxP7tLTezO14RCIclUo2kGJxmknSVg1_wGgJPeIhE1p2mZoKMcjdW8PkjC9Pj2jHesi5hrLxkEjvH_y_NwLysDfXE6_H7GLczK6PziBP6XR5qfQlY67uYglvXE4JQUCJ4eBl7qiFKpYoTRvAN8\",\n        \"q\": \"8XaAqGZzL-R80u9zs50RJ0AKuW77yAou1VKHdA6QiN6ZBZqLCsVPtPiofHHZ7qYRxeixseKX7B8O3UDiDeZNbkn0qYNL7ICyhZEQVZq8DtGc5cL2LNoflKzDQtF_oWIl6Pa8-2K2rCXPdwd3YXyZBuwY5mjg-LjivIntuifqo20\",\n    }\n)\nJWT_AUTH[\"JWT_PUBLIC_SIGNING_JWK_SET\"] = json.dumps(\n    {\n        \"keys\": [\n            {\n                \"kid\": \"openedx\",\n                \"kty\": \"RSA\",\n                \"e\": \"AQAB\",\n                \"n\": \"tflKzViWjPQ6mbwEegKmRl1dnDmL99EEMIN9r2QI5S0dikHMu64neDcHzX0NEjRscv6TuJ7IMe5Ekh75SCSDCk6YaMao2s6W5vHU8vUczysP72BDYeGQj13ZHe4kwPyEDFaJtOZt5kkMxaVEhpGAwnu41WMvchTcPcqLWn5sYDrU83azFsyw33yUG3h7nwymCEqblK93EO5oEcb7KUiQflusGWnV9Yhte1Jel7-hmU4FACt9yOnvQnUCJBXjRDpZAgpkzaf3ZAa1vFKxHdhmDhiLCCTqwwTviq4lS6bEN6jAG5HB7ewHHRiCIXjxAwstGIs6XaX7xPTtGUykxadb8w\",\n            }\n        ]\n    }\n)\nJWT_AUTH[\"JWT_ISSUERS\"] = [\n    {\n        \"ISSUER\": \"http://www." + lmsName + "-openedx.apps.demo.coreostrain.me/oauth2\",\n        \"AUDIENCE\": \"openedx\",\n        \"SECRET_KEY\": \"8c3CgWnCEWRX4ypD78iyX7Yg\"\n    }\n]\n\n\n######## End of settings common to LMS and CMS\n\n######## Common LMS settings\nLOGIN_REDIRECT_WHITELIST = [\"" + cmsName + ".www." + lmsName + "-openedx.apps.demo.coreostrain.me\"]\n\n# This url must not be None and should not be used anywhere\nLEARNING_MICROFRONTEND_URL = \"http://learn.openedx.org\"\n\n# Fix media files paths\nPROFILE_IMAGE_BACKEND[\"options\"][\"location\"] = os.path.join(\n    MEDIA_ROOT, \"profile-images/\"\n)\n\nCOURSE_CATALOG_VISIBILITY_PERMISSION = \"see_in_catalog\"\nCOURSE_ABOUT_VISIBILITY_PERMISSION = \"see_about_page\"\n\n# Allow insecure oauth2 for local interaction with local containers\nOAUTH_ENFORCE_SECURE = False\n\n# Create folders if necessary\nfor folder in [DATA_DIR, LOG_DIR, MEDIA_ROOT, STATIC_ROOT_BASE, ORA2_FILEUPLOAD_ROOT]:\n    if not os.path.exists(folder):\n        os.makedirs(folder)\n\n\n\n######## End of common LMS settings\n\n# Setup correct webpack configuration file for development\nWEBPACK_CONFIG_PATH = \"webpack.dev.config.js\"\n\nSESSION_COOKIE_DOMAIN = \".www." + lmsName + "-openedx.apps.demo.coreostrain.me\"\n\nLMS_BASE = \"www." + lmsName + "-openedx.apps.demo.coreostrain.me:8000\"\nLMS_ROOT_URL = \"http://{}\".format(LMS_BASE)\nLMS_INTERNAL_ROOT_URL = LMS_ROOT_URL\nSITE_NAME = LMS_BASE\nCMS_BASE = \"" + cmsName + ".www." + lmsName + "-openedx.apps.demo.coreostrain.me:8001\"\nCMS_ROOT_URL = \"http://{}\".format(CMS_BASE)\nLOGIN_REDIRECT_WHITELIST.append(CMS_BASE)\n\nFEATURES['ENABLE_COURSEWARE_MICROFRONTEND'] = False\nCOMMENTS_SERVICE_URL = \"http://forum:4567\"\n\nLOGGING[\"loggers\"][\"oauth2_provider\"] = {\n    \"handlers\": [\"console\"],\n    \"level\": \"DEBUG\"\n}\n\n\n"
	cm.Data["production.py"] = "# -*- coding: utf-8 -*-\nimport os\nfrom lms.envs.production import *\n\n####### Settings common to LMS and CMS\nimport json\nimport os\n\nfrom xmodule.modulestore.modulestore_settings import update_module_store_settings\n\n\n# Mongodb connection parameters: simply modify `mongodb_parameters` to affect all connections to MongoDb.\nmongodb_parameters = {\n    \"host\": \"mongodb\",\n    \"port\": 27017,\n    \n    \"user\": None,\n    \"password\": None,\n    \n    \"db\": \"openedx\",\n}\nDOC_STORE_CONFIG = mongodb_parameters\nCONTENTSTORE = {\n    \"ENGINE\": \"xmodule.contentstore.mongo.MongoContentStore\",\n    \"ADDITIONAL_OPTIONS\": {},\n    \"DOC_STORE_CONFIG\": DOC_STORE_CONFIG\n}\n# Load module store settings from config files\nupdate_module_store_settings(MODULESTORE, doc_store_settings=DOC_STORE_CONFIG)\nDATA_DIR = \"/openedx/data/\"\nfor store in MODULESTORE[\"default\"][\"OPTIONS\"][\"stores\"]:\n   store[\"OPTIONS\"][\"fs_root\"] = DATA_DIR\n\n# Behave like memcache when it comes to connection errors\nDJANGO_REDIS_IGNORE_EXCEPTIONS = True\n\nDEFAULT_FROM_EMAIL = ENV_TOKENS.get(\"DEFAULT_FROM_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nDEFAULT_FEEDBACK_EMAIL = ENV_TOKENS.get(\"DEFAULT_FEEDBACK_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nSERVER_EMAIL = ENV_TOKENS.get(\"SERVER_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nTECH_SUPPORT_EMAIL = ENV_TOKENS.get(\"TECH_SUPPORT_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nCONTACT_EMAIL = ENV_TOKENS.get(\"CONTACT_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nBUGS_EMAIL = ENV_TOKENS.get(\"BUGS_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nUNIVERSITY_EMAIL = ENV_TOKENS.get(\"UNIVERSITY_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nPRESS_EMAIL = ENV_TOKENS.get(\"PRESS_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nPAYMENT_SUPPORT_EMAIL = ENV_TOKENS.get(\"PAYMENT_SUPPORT_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nBULK_EMAIL_DEFAULT_FROM_EMAIL = ENV_TOKENS.get(\"BULK_EMAIL_DEFAULT_FROM_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nAPI_ACCESS_MANAGER_EMAIL = ENV_TOKENS.get(\"API_ACCESS_MANAGER_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\nAPI_ACCESS_FROM_EMAIL = ENV_TOKENS.get(\"API_ACCESS_FROM_EMAIL\", ENV_TOKENS[\"CONTACT_EMAIL\"])\n\n# Get rid completely of lms.djangoapps.coursewarehistoryextended, as we do not use the CSMH database\nINSTALLED_APPS.remove(\"lms.djangoapps.coursewarehistoryextended\")\nDATABASE_ROUTERS.remove(\n    \"openedx.core.lib.django_courseware_routers.StudentModuleHistoryExtendedRouter\"\n)\n\n# Set uploaded media file path\nMEDIA_ROOT = \"/openedx/media/\"\n\n# Add your MFE and third-party app domains here\nCORS_ORIGIN_WHITELIST = []\n\n# Video settings\nVIDEO_IMAGE_SETTINGS[\"STORAGE_KWARGS\"][\"location\"] = MEDIA_ROOT\nVIDEO_TRANSCRIPTS_SETTINGS[\"STORAGE_KWARGS\"][\"location\"] = MEDIA_ROOT\n\nGRADES_DOWNLOAD = {\n    \"STORAGE_TYPE\": \"\",\n    \"STORAGE_KWARGS\": {\n        \"base_url\": \"/media/grades/\",\n        \"location\": \"/openedx/media/grades\",\n    },\n}\n\nORA2_FILEUPLOAD_BACKEND = \"filesystem\"\nORA2_FILEUPLOAD_ROOT = \"/openedx/data/ora2\"\nORA2_FILEUPLOAD_CACHE_NAME = \"ora2-storage\"\n\n# Change syslog-based loggers which don't work inside docker containers\nLOGGING[\"handlers\"][\"local\"] = {\n    \"class\": \"logging.handlers.WatchedFileHandler\",\n    \"filename\": os.path.join(LOG_DIR, \"all.log\"),\n    \"formatter\": \"standard\",\n}\nLOGGING[\"handlers\"][\"tracking\"] = {\n    \"level\": \"DEBUG\",\n    \"class\": \"logging.handlers.WatchedFileHandler\",\n    \"filename\": os.path.join(LOG_DIR, \"tracking.log\"),\n    \"formatter\": \"standard\",\n}\nLOGGING[\"loggers\"][\"tracking\"][\"handlers\"] = [\"console\", \"local\", \"tracking\"]\n# Email\nEMAIL_USE_SSL = False\n# Forward all emails from edX's Automated Communication Engine (ACE) to django.\nACE_ENABLED_CHANNELS = [\"django_email\"]\nACE_CHANNEL_DEFAULT_EMAIL = \"django_email\"\nACE_CHANNEL_TRANSACTIONAL_EMAIL = \"django_email\"\nEMAIL_FILE_PATH = \"/tmp/openedx/emails\"\n\nLOCALE_PATHS.append(\"/openedx/locale/contrib/locale\")\nLOCALE_PATHS.append(\"/openedx/locale/user/locale\")\n\n# Allow the platform to include itself in an iframe\nX_FRAME_OPTIONS = \"SAMEORIGIN\"\n\n\nJWT_AUTH[\"JWT_ISSUER\"] = \"http://www." + lmsName + "-openedx.apps.demo.coreostrain.me/oauth2\"\nJWT_AUTH[\"JWT_AUDIENCE\"] = \"openedx\"\nJWT_AUTH[\"JWT_SECRET_KEY\"] = \"8c3CgWnCEWRX4ypD78iyX7Yg\"\nJWT_AUTH[\"JWT_PRIVATE_SIGNING_JWK\"] = json.dumps(\n    {\n        \"kid\": \"openedx\",\n        \"kty\": \"RSA\",\n        \"e\": \"AQAB\",\n        \"d\": \"FCOb0LAOMVlSJvN091_VsRHiK0j_IZUDRq82uLN0fJCKpWN02gyDF73XYjmFuc8NdYiRJqyD8WqyMg21fvNzgS-DlIzv4Q9eCf8Xly_jWVYltFNOAcYp7oPvZG2XqbgIkSj-ooOiBAtvm2wX8mCmBGAW657HgHOokDobRA-bxOZt2bCfscFPjkOfYTTPf4V8m9_lXGJawiRN0saQFq5_cjslLGB9X96hE-yxZbFA7mtMr9Il4wcpgG5s5oig2p5dE0wd-IzlckAOoLd016-67dNTNrNmVN4ITHffY-M8KYMklgzmZE8hvdlt_pt6W5kIyamTcSA1_1RN8gHJHBtayQ\",\n        \"n\": \"tflKzViWjPQ6mbwEegKmRl1dnDmL99EEMIN9r2QI5S0dikHMu64neDcHzX0NEjRscv6TuJ7IMe5Ekh75SCSDCk6YaMao2s6W5vHU8vUczysP72BDYeGQj13ZHe4kwPyEDFaJtOZt5kkMxaVEhpGAwnu41WMvchTcPcqLWn5sYDrU83azFsyw33yUG3h7nwymCEqblK93EO5oEcb7KUiQflusGWnV9Yhte1Jel7-hmU4FACt9yOnvQnUCJBXjRDpZAgpkzaf3ZAa1vFKxHdhmDhiLCCTqwwTviq4lS6bEN6jAG5HB7ewHHRiCIXjxAwstGIs6XaX7xPTtGUykxadb8w\",\n        \"p\": \"wO3tECV18PQcLiLMvfjXYhLz6yxP7tLTezO14RCIclUo2kGJxmknSVg1_wGgJPeIhE1p2mZoKMcjdW8PkjC9Pj2jHesi5hrLxkEjvH_y_NwLysDfXE6_H7GLczK6PziBP6XR5qfQlY67uYglvXE4JQUCJ4eBl7qiFKpYoTRvAN8\",\n        \"q\": \"8XaAqGZzL-R80u9zs50RJ0AKuW77yAou1VKHdA6QiN6ZBZqLCsVPtPiofHHZ7qYRxeixseKX7B8O3UDiDeZNbkn0qYNL7ICyhZEQVZq8DtGc5cL2LNoflKzDQtF_oWIl6Pa8-2K2rCXPdwd3YXyZBuwY5mjg-LjivIntuifqo20\",\n    }\n)\nJWT_AUTH[\"JWT_PUBLIC_SIGNING_JWK_SET\"] = json.dumps(\n    {\n        \"keys\": [\n            {\n                \"kid\": \"openedx\",\n                \"kty\": \"RSA\",\n                \"e\": \"AQAB\",\n                \"n\": \"tflKzViWjPQ6mbwEegKmRl1dnDmL99EEMIN9r2QI5S0dikHMu64neDcHzX0NEjRscv6TuJ7IMe5Ekh75SCSDCk6YaMao2s6W5vHU8vUczysP72BDYeGQj13ZHe4kwPyEDFaJtOZt5kkMxaVEhpGAwnu41WMvchTcPcqLWn5sYDrU83azFsyw33yUG3h7nwymCEqblK93EO5oEcb7KUiQflusGWnV9Yhte1Jel7-hmU4FACt9yOnvQnUCJBXjRDpZAgpkzaf3ZAa1vFKxHdhmDhiLCCTqwwTviq4lS6bEN6jAG5HB7ewHHRiCIXjxAwstGIs6XaX7xPTtGUykxadb8w\",\n            }\n        ]\n    }\n)\nJWT_AUTH[\"JWT_ISSUERS\"] = [\n    {\n        \"ISSUER\": \"http://www." + lmsName + "-openedx.apps.demo.coreostrain.me/oauth2\",\n        \"AUDIENCE\": \"openedx\",\n        \"SECRET_KEY\": \"8c3CgWnCEWRX4ypD78iyX7Yg\"\n    }\n]\n\n\n######## End of settings common to LMS and CMS\n\n######## Common LMS settings\nLOGIN_REDIRECT_WHITELIST = [\"" + cmsName + ".www." + lmsName + "-openedx.apps.demo.coreostrain.me\"]\n\n# Better layout of honor code/tos links during registration\nREGISTRATION_EXTRA_FIELDS[\"terms_of_service\"] = \"required\"\nREGISTRATION_EXTRA_FIELDS[\"honor_code\"] = \"hidden\"\n\n# This url must not be None and should not be used anywhere\nLEARNING_MICROFRONTEND_URL = \"http://learn.openedx.org\"\n\n# Fix media files paths\nPROFILE_IMAGE_BACKEND[\"options\"][\"location\"] = os.path.join(\n    MEDIA_ROOT, \"profile-images/\"\n)\n\nCOURSE_CATALOG_VISIBILITY_PERMISSION = \"see_in_catalog\"\nCOURSE_ABOUT_VISIBILITY_PERMISSION = \"see_about_page\"\n\n# Allow insecure oauth2 for local interaction with local containers\nOAUTH_ENFORCE_SECURE = False\n\n# Create folders if necessary\nfor folder in [DATA_DIR, LOG_DIR, MEDIA_ROOT, STATIC_ROOT_BASE, ORA2_FILEUPLOAD_ROOT]:\n    if not os.path.exists(folder):\n        os.makedirs(folder)\n\n\n\n######## End of common LMS settings\n\nALLOWED_HOSTS = [\n    ENV_TOKENS.get(\"LMS_BASE\"),\n    FEATURES[\"PREVIEW_LMS_BASE\"],\n    \"lms\",\n]\n\n# When we cannot provide secure session/csrf cookies, we must disable samesite=none\nSESSION_COOKIE_SECURE = False\nCSRF_COOKIE_SECURE = False\nDCS_SESSION_COOKIE_SAMESITE = \"Lax\"\n\n\n# Required to display all courses on start page\nSEARCH_SKIP_ENROLLMENT_START_DATE_FILTERING = True\n\n"
	return cm
}

func (r *OpenedxReconciler) nginxConfig(instance *cachev1.Openedx) *corev1.ConfigMap {
	cm := newConfigMap(instance)
	cm.ObjectMeta.Name = "nginx-config" //Name the ConfigMap
	lmsName := getOpenedxLmsUrlName(instance)
	cmsName := getOpenedxCmsUrlName(instance)

	if cm.Data == nil {
		cm.Data = make(map[string]string)
	}

	cm.Data["_tutor.conf"] = "# Allow long domain names\nserver_names_hash_bucket_size 128;\n\n# Set a short ttl for proxies to allow restarts\nresolver 127.0.0.11 [::1]:5353 valid=10s;\n\n# Configure logging to include scheme and server name\nlog_format tutor '$remote_addr - $remote_user [$time_local] $scheme://$host \"$request\" '\n                 '$status $body_bytes_sent \"$http_referer\" '\n                 '\"$http_user_agent\" \"$http_x_forwarded_for\"';"
	//cm.Data["extra.conf"] = "# MinIO public service\nupstream minio-backend {\n    server minio:9000 fail_timeout=0;\n}\n\nserver {\n  listen 80;\n  server_name minio.local.overhang.io;\n\n  \n\n  # Disables server version feedback on pages and in headers\n  server_tokens off;\n \n  client_max_body_size 0;\n\n  location / {\n    \n    proxy_set_header Host $http_host;\n    proxy_redirect off;\n\n    proxy_pass http://minio-backend;\n  }\n}"
	cm.Data["cms.conf"] = "\nupstream cms-backend {\n    server cms:8000 fail_timeout=0;\n}\n\n\n\nserver {\n  listen 80;\n  server_name " + cmsName + ".www." + lmsName + "-openedx.apps.demo.coreostrain.me;\n\n  \n\n  access_log /var/log/nginx/access.log tutor;\n  client_max_body_size 250M;\n  server_tokens off;\n\n  rewrite ^(.*)/favicon.ico$ /static/images/favicon.ico last;\n\n  location @proxy_to_cms_app {\n    proxy_redirect off;\n proxy_set_header Host $http_host;\n proxy_pass http://cms-backend;\n  }\n\n  location / {\n    try_files $uri @proxy_to_cms_app;\n  }\n}"
	cm.Data["lms.conf"] = "\nupstream lms-backend {\n    server lms:8000 fail_timeout=0;\n}\n\n\n\nserver {\n  listen 80;\n  server_name www." + lmsName + "-openedx.apps.demo.coreostrain.me preview.www." + lmsName + "-openedx.apps.demo.coreostrain.me;\n\n  \n\n  access_log /var/log/nginx/access.log tutor;\n  client_max_body_size 4M;\n  server_tokens off;\n\n  rewrite ^(.*)/favicon.ico$ /static/images/favicon.ico last;\n\n  location @proxy_to_lms_app {\n proxy_redirect off;\n proxy_set_header Host $http_host;\nproxy_pass http://lms-backend; }\n\n  location / {\n    try_files $uri @proxy_to_lms_app;\n  }\n\n  # /login?next=<any image> can be used by 3rd party sites in <img> tags to\n  # determine whether a user on their site is logged into edX.\n  # The most common image to use is favicon.ico.\n  location /login {\n    if ( $arg_next ~* \"favicon.ico\" ) {\n      return 403;\n    }\n    try_files $uri @proxy_to_lms_app;\n  }\n\n  # Need a separate location for the image uploads endpoint to limit upload sizes\n  location ~ ^/api/profile_images/[^/]*/[^/]*/upload$ {\n    try_files $uri @proxy_to_lms_app;\n    client_max_body_size 1049576;\n  }\n}\n"

	return cm
}

func (r *OpenedxReconciler) mysqlInitdbConfig(instance *cachev1.Openedx) *corev1.ConfigMap {
	cm := newConfigMap(instance)
	cm.ObjectMeta.Name = "mysql-initdb-config" //Name the ConfigMap

	if cm.Data == nil {
		cm.Data = make(map[string]string)
	}
	cm.Data["initdb.sql"] = "CREATE DATABASE IF NOT EXISTS openedx;\nGRANT ALL ON openedx.* TO \"openedx\"@\"%\" IDENTIFIED BY \"0yMvt69B\";"
	return cm
}

func (r *OpenedxReconciler) redisConfig(instance *cachev1.Openedx) *corev1.ConfigMap {
	cm := newConfigMap(instance)
	cm.ObjectMeta.Name = "redis-config" //Name the ConfigMap

	if cm.Data == nil {
		cm.Data = make(map[string]string)
	}
	cm.Data["redis.conf"] = "# https://raw.githubusercontent.com/redis/redis/6.0/redis.conf\nport 6379\ntcp-backlog 511\ntimeout 0\ntcp-keepalive 300\ndaemonize no\nsupervised no\npidfile /var/run/redis_6379.pid\nloglevel notice\nlogfile \"\"\ndatabases 16\n################################ SNAPSHOTTING  ################################\n#\n# Save the DB on disk:\n#\n#   save <seconds> <changes>\nsave 900 1\nsave 300 10\nsave 60 10000\nstop-writes-on-bgsave-error yes\nrdbcompression yes\nrdbchecksum yes\ndir /openedx/redis/data/\ndbfilename dump.rdb\nrdb-del-sync-files no\n############################## APPEND ONLY MODE ###############################\n# http://redis.io/topics/persistence\nappendonly yes\nappendfilename \"appendonly.aof\"\nappendfsync everysec\nno-appendfsync-on-rewrite no\nauto-aof-rewrite-percentage 100\nauto-aof-rewrite-min-size 64mb\naof-load-truncated yes\naof-use-rdb-preamble yes"
	return cm
}

func (r *OpenedxReconciler) caddyConfig(instance *cachev1.Openedx) *corev1.ConfigMap {
	cm := newConfigMap(instance)
	cm.ObjectMeta.Name = "caddy-config" //Name the ConfigMap
	lmsName := getOpenedxLmsUrlName(instance)
	cmsName := getOpenedxCmsUrlName(instance)

	if cm.Data == nil {
		cm.Data = make(map[string]string)
	}
	cm.Data["Caddyfile"] = "www." + lmsName + "-openedx.apps.demo.coreostrain.me:80 {\n   reverse_proxy nginx:80 \n}\npreview.www." + lmsName + "-openedx.apps.demo.coreostrain.me:80 {\n   reverse_proxy nginx:80\n}\n" + cmsName + ".www." + lmsName + "-openedx.apps.demo.coreostrain.me:80 {\n   reverse_proxy nginx:80\n}"
	return cm
}
